#1 - running tail -f /var/log/haproxy.log on lb1 and lb2 while trying to start rke2 service on kubemaster2

mikeb@lb1:~$ tail -f /var/log/haproxy.log
Jul  7 17:01:00 lb1 haproxy[24409]: Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2002ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb1 haproxy[24409]: Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2002ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb1 haproxy[24409]: backend kube-apiserver has no server available!
Jul  7 17:01:00 lb1 haproxy[24409]: [WARNING]  (24409) : Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2002ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb1 haproxy[24409]: [ALERT]    (24409) : backend 'kube-apiserver' has no server available!
Jul  7 17:01:00 lb1 haproxy[24409]: backend kube-apiserver has no server available!
Jul  7 17:08:22 lb1 haproxy[24409]: Server kube-apiserver/kubemaster1 is UP, reason: Layer4 check passed, check duration: 0ms. 1 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.
Jul  7 17:08:22 lb1 haproxy[24409]: [WARNING]  (24409) : Server kube-apiserver/kubemaster1 is UP, reason: Layer4 check passed, check duration: 0ms. 1 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.
Jul  7 17:08:22 lb1 haproxy[24409]: Server kube-apiserver/kubemaster1 is UP, reason: Layer4 check passed, check duration: 0ms. 1 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.
Jul  7 17:09:20 lb1 haproxy[24409]: 172.18.232.31:37528 [07/Jul/2024:17:09:20.065] kube-apiserver kube-apiserver/kubemaster1 1/10/52 39307 -- 1/1/0/0/0 0/0

mikeb@lb02:~$ tail -f /var/log/haproxy.log
Jul  7 17:00:32 lb02 haproxy[926]: [WARNING]  (926) : Server kube-apiserver/kubemaster2 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2002ms. 1 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb02 haproxy[926]: [WARNING]  (926) : Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2003ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:00:32 lb02 haproxy[926]: Server kube-apiserver/kubemaster2 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2002ms. 1 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb02 haproxy[926]: Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2003ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb02 haproxy[926]: [ALERT]    (926) : backend 'kube-apiserver' has no server available!
Jul  7 17:01:00 lb02 haproxy[926]: Server kube-apiserver/kubemaster3 is DOWN, reason: Layer4 timeout, info: " at initial connection step of tcp-check", check duration: 2003ms. 0 active and 0 backup servers left. 0 sessions active, 0 requeued, 0 remaining in queue.
Jul  7 17:01:00 lb02 haproxy[926]: backend kube-apiserver has no server available!
Jul  7 17:01:00 lb02 haproxy[926]: backend kube-apiserver has no server available!
Jul  7 17:08:22 lb02 haproxy[926]: Server kube-apiserver/kubemaster1 is UP, reason: Layer4 check passed, check duration: 3ms. 1 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.
Jul  7 17:08:22 lb02 haproxy[926]: [WARNING]  (926) : Server kube-apiserver/kubemaster1 is UP, reason: Layer4 check passed, check duration: 3ms. 1 active and 0 backup servers online. 0 sessions requeued, 0 total in queue.

#2 root@kubemaster2:/home/mikeb# curl -k https://rancher.vgriz.com:9345/cacerts
curl: (7) Failed to connect to rancher.vgriz.com port 9345 after 1 ms: Connection refused

Here are the HAProxy configuration files for both. I see that 6443 is binded, should 9345 as well?

mikeb@lb1:~$ cat /etc/haproxy/haproxy.cfg
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend kube-apiserver
        bind *:6443     # BIND to any address so it is accessible via VIP
	mode tcp
        option tcplog
        default_backend kube-apiserver

backend kube-apiserver
        balance roundrobin
	mode tcp
	option tcp-check
        server  kubemaster1   172.18.232.31:6443 check
        server  kubemaster2   172.18.232.32:6443 check
        server  kubemaster3   172.18.232.33:6443 check

listen stats
        bind *:8443
        stats enable                    # enable statistics reports  
        stats hide-version              # Hide the version of HAProxy
        stats refresh 30s               # HAProxy refresh time
        stats show-node                 # Shows the hostname of the node
        stats auth haadmin:P@ssword     # Enforce Basic authentication for Stats page
        stats uri /stats                # Statistics URL

mikeb@lb02:~$ cat /etc/haproxy/haproxy.cfg
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend kube-apiserver
        bind *:6443     # BIND to any address so it is accessible via VIP
	mode tcp
        option tcplog
        default_backend kube-apiserver

backend kube-apiserver
        balance roundrobin
	mode tcp
	option tcp-check
        server  kubemaster1   172.18.232.31:6443 check
        server  kubemaster2   172.18.232.32:6443 check
        server  kubemaster3   172.18.232.33:6443 check

listen stats
        bind *:8443
        stats enable                    # enable statistics reports  
        stats hide-version              # Hide the version of HAProxy
        stats refresh 30s               # HAProxy refresh time
        stats show-node                 # Shows the hostname of the node
        stats auth haadmin:P@ssword     # Enforce Basic authentication for Stats page
        stats uri /stats                # Statistics URL