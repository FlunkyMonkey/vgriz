#Environment

all DNS is .vgriz.com

ubemaster1 - control node - rke2 - ubuntu 22.04
kubemaster2 - control node - rke2 - ubuntu 22.04
kubemaster3 - control node - rke2 - ubuntu 22.04
kube1 - worker node - rke2 - ubuntu 22.04
kube2 - worker node - rke2 - ubuntu 22.04
kube3 - worker node - rke2 - ubuntu 22.04
lb1 - haproxy/keepalived - 172.18.232.28 - ubuntu 22.04
lb2 - haproxy/keepalived - 172.18.232.29 - ubuntu 22.04
rancher.vgriz.com - 172.18.232.30 - load balancer vrrp ip forwards to 172.18.232.30

#####HAproxy.conf
root@lb1:/home/mikeb# cat /etc/haproxy/haproxy.cfg
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend kube-apiserver
        bind *:6443     # BIND to any address so it is accessible via VIP
	mode tcp
        option tcplog
        default_backend kube-apiserver

backend kube-apiserver
        balance roundrobin
	mode tcp
	option tcp-check
        server  kubemaster1   172.18.232.31:6443 check
        server  kubemaster2   172.18.232.32:6443 check
        server  kubemaster3   172.18.232.33:6443 check

listen stats
        bind *:8443
        stats enable                    # enable statistics reports  
        stats hide-version              # Hide the version of HAProxy
        stats refresh 30s               # HAProxy refresh time
        stats show-node                 # Shows the hostname of the node
        stats auth haadmin:P@ssword     # Enforce Basic authentication for Stats page
        stats uri /stats                # Statistics URL

## /end HAproxy.conf


### Steps performed on kubemaster1####
# Update package index and install dependencies
sudo apt update
sudo apt install -y ca-certificates curl gnupg lsb-release

# Add Dockerâ€™s official GPG key
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# Set up the repository
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update package index again and install Docker
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Verify Docker installation
sudo systemctl status docker

sudo usermod -aG docker ubuntu

sudo su
mkdir -p /etc/rancher/rke2/
nano /etc/rancher/rke2/config.yaml

curl -sfL https://get.rke2.io | sh -
systemctl enable rke2-server.service
systemctl start rke2-server.service

/var/lib/rancher/rke2/bin/kubectl \
        --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes

/var/lib/rancher/rke2/bin/kubectl \
        --kubeconfig /etc/rancher/rke2/rke2.yaml get pods --all-namespaces

snap install kubectl --classic

mkdir ~/.kube
cp /etc/rancher/rke2/rke2.yaml ~/.kube/config
nano ~/.kube/config
# Update Config

